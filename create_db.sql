create table com.annhve.naukatesttask.departments(
    id number(*, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
    name varchar2(250) NOT NULL,
    CONSTRAINT departments_pk PRIMARY KEY(id)
);


create table com.annhve.naukatesttask.employees(
    id number(*, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
    name varchar2(50) NOT NULL,
    surname varchar2(100) NOT NULL,
    date_of_birthday date NOT NULL,
    id_department number NOT NULL,
    position varchar2(100) NOT NULL,
    address varchar2(50) NOT NULL,
    remote_work number(1,0),
    foreign key(id_department) references com.annhve.naukatesttask.departments(id) ON DELETE CASCADE,
    CONSTRAINT employees_pk PRIMARY KEY(id)
);
alter table com.annhve.naukatesttask.employees
modify address varchar2(100);
create table marks(
    id number(*, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
    title nvarchar2(2) NOT NULL,
    transcription nvarchar2(100) NOT NULL,
    CONSTRAINT marks_pk PRIMARY KEY(id)
);

create table work_calendar(
    id number(*, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
    day date NOT NULL,
    id_day_type number(*, 0) NOT NULL,
    CONSTRAINT id_day_type PRIMARY KEY(id)
);

create table day_types(
    id number(*, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
    title nvarchar2(64) NOT NULL,
    CONSTRAINT calendar_day_pk PRIMARY KEY(id)
);

create table employees_and_calendar_days(
    employee_id number(*, 0),
    mark_id number(*, 0),
    work_calendar_id number(*, 0),
    foreign key(employee_id) references com.annhve.naukatesttask.employees(id),
    foreign key(mark_id) references marks(id),
    foreign key(work_calendar_id) references work_calendar(id),
    UNIQUE(employee_id, mark_id, work_calendar_id)
    );

